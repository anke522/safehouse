<!DOCTYPE html>
<html lang="en">
<head>
  <!-- Use correct character set. -->
  <meta charset="utf-8">
  <!-- Tell IE to use the latest, best version. -->
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <!-- Make the application on mobile take up the full browser screen and disable user scaling. -->
  <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, minimum-scale=1, user-scalable=no">
  <title>SafeHouse</title>
  <script src="/Build/Cesium/Cesium.js"></script>
  <script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>
  <script src="https://code.jquery.com/ui/1.12.0/jquery-ui.min.js"></script>
  <style>
      @import url(/Build/Cesium/Widgets/widgets.css);
      html, body, #cesiumContainer {
          width: 100%; height: 100%; margin: 0; padding: 0; overflow: hidden;
      }
  </style>
</head>
<body>
  <div id="cesiumContainer"></div>
  <script>
    var viewer = new Cesium.Viewer('cesiumContainer');

    var scene = viewer.scene;

    var center = Cesium.Cartesian3.fromDegrees(-82.4374762, 27.9561611, 0.0)
    var modelMatrix = Cesium.Transforms.eastNorthUpToFixedFrame(center)
    var model = scene.primitives.add(Cesium.Model.fromGltf({
        url : '/models/Global_SOFWERX.glb',
        modelMatrix : modelMatrix,
        scale : 1.0
    }));
    var heading = Cesium.Math.toRadians(0.0);
    var pitch = Cesium.Math.toRadians(0.0);
    var range = 100.0;
    viewer.camera.lookAt(center, new Cesium.HeadingPitchRange(heading, pitch, range));

    var doorcamera = viewer.entities.add({
      name : 'doorCamera',
      position: Cesium.Cartesian3.fromDegrees(-82.4374762, 27.9561761, 2.6),
      box : {
        dimensions : new Cesium.Cartesian3(0.25, 0.25, 0.25),
        material : Cesium.Color.GREEN.withAlpha(0.5),
        outline : true,
        outlineColor : Cesium.Color.BLACK
      }
    });

    var minicam = viewer.entities.add({
      name : 'miniCamera',
      position: Cesium.Cartesian3.fromDegrees(-82.4374720, 27.95624550, 0.5),
      box : {
        dimensions : new Cesium.Cartesian3(0.25, 0.25, 0.25),
        material : Cesium.Color.GREEN.withAlpha(0.5),
        outline : true,
        outlineColor : Cesium.Color.BLACK
      }
   });

   var doorlock = viewer.entities.add({
     name : 'doorLock',
     position: Cesium.Cartesian3.fromDegrees(-82.4374762, 27.9561791, 1.2),
     box : {
       dimensions : new Cesium.Cartesian3(0.25, 0.25, 0.25),
       material : Cesium.Color.GREEN.withAlpha(0.5),
       outline : true,
       outlineColor : Cesium.Color.BLACK
     }
   });

   var motiondetector = viewer.entities.add({
     name : 'motionDetector',
     position: Cesium.Cartesian3.fromDegrees(-82.4374422, 27.9561921, 1.2),
     box : {
       dimensions : new Cesium.Cartesian3(0.25, 0.25, 0.25),
       material : Cesium.Color.GREEN.withAlpha(0.5),
       outline : true,
       outlineColor : Cesium.Color.BLACK
     }
   });

/*
   var range3 = viewer.entities.add({
     name : 'Range3',
     position: Cesium.Cartesian3.fromDegrees(-82.4374472, 27.95621700, 1.1),
     box : {
       dimensions : new Cesium.Cartesian3(0.25, 0.25, 0.25),
       material : Cesium.Color.GREEN.withAlpha(0.5),
       outline : true,
       outlineColor : Cesium.Color.BLACK
     }
   });
*/

   var accessPoint = viewer.entities.add({
     name : 'accessPoint',
     position: Cesium.Cartesian3.fromDegrees(-82.4374483, 27.9561880, 2.0),
     box : {
       dimensions : new Cesium.Cartesian3(0.25, 0.25, 0.25),
       material : Cesium.Color.GREEN.withAlpha(0.5),
       outline : true,
       outlineColor : Cesium.Color.BLACK
     }
   });

   var lamp = viewer.entities.add({
     name : 'lamp',
     position: Cesium.Cartesian3.fromDegrees(-82.4374464, 27.9561880, 0.3),
     box : {
        dimensions : new Cesium.Cartesian3(0.25, 0.25, 0.25),
        material : Cesium.Color.GREEN.withAlpha(0.5),
        outline : true,
        outlineColor : Cesium.Color.BLACK
     }
   });

   var blueRange1 = viewer.entities.add({
     name : 'blueRange1',
     position: Cesium.Cartesian3.fromDegrees(-82.4374568, 27.9561641, 1.1),
     box : {
        dimensions : new Cesium.Cartesian3(0.25, 0.25, 0.25),
        material : Cesium.Color.GREEN.withAlpha(0.5),
        outline : true,
        outlineColor : Cesium.Color.BLACK
     }
   });

   var Alexa = viewer.entities.add({
     name : 'Alexa',
     position: Cesium.Cartesian3.fromDegrees(-82.4374483, 27.9561640, 0.7),
     box : {
       dimensions : new Cesium.Cartesian3(0.25, 0.25, 0.25),
       material : Cesium.Color.GREEN.withAlpha(0.5),
       outline : true,
       outlineColor : Cesium.Color.BLACK
     }
   });

   var colorizeTimeout

   var period = 5000

   function colorize() {

     $.get( "/recent/motion/action/now-1m/now", function( data ) {
       if(data && data.hits > 0) {
         doorcamera.box.material = Cesium.Color.RED
       } else {
         $.get( "/recent/motion/action/now-5m/now", function( data ) {
           if(data && data.hits > 0) {
             doorcamera.box.material = Cesium.Color.ORANGE
           } else {
             doorcamera.box.material = Cesium.Color.GREEN
           }
         })
       }
     })

     colorizeTimeout = setTimeout(colorize, period)
   }

   colorizeTimeout = setTimeout(colorize, period)

  </script>
</body>
</html>
